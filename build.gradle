buildscript {
    apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/plugins.gradle'
    apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/java/plugins.gradle'
    dependencies {
        classpath "$axion"
        classpath "$bintray"
        classpath "$jmh"
    }
}

ext {
    desc = 'Fast Hash Binary Overlay Wrappers'
}
apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/java/java.gradle'
apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/axion.gradle'
apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/comodal.gradle'
apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/java/bintray-maven.gradle'
//apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/java/checks.gradle'
apply from: 'https://raw.githubusercontent.com/comodal/gradle-conf/master/java/jmh.gradle'

sourceCompatibility = JavaVersion.VERSION_1_9

tasks.withType(Test) {
    jvmArgs += ['-XX:+IgnoreUnrecognizedVMOptions', '--permit-illegal-access']
}

sourceSets {
    mustache
    main {
        java {
            //srcDir 'src/systems.comodal.address_overlay'
            srcDir 'src/systems.comodal.hash_overlay'
        }
        resources {
            srcDir 'src/systems.comodal.address_overlay/resources'
        }
    }
}

repositories {
    maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    mustacheCompile 'com.github.spullara.mustache.java:compiler:+'
    mustacheCompile 'org.bouncycastle:bcprov-jdk15on:+'

    jmh 'org.bouncycastle:bcprov-jdk15on:+'
    jmh fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'org.bouncycastle:bcprov-jdk15on:+'
}

jmh {
    // http://jmh.morethan.io/
    includeTests = false
    benchmarkParameters = [msgLength: "128"]
    threads = 3
}

task generateSrc(type: JavaExec) {
    classpath = sourceSets.mustache.runtimeClasspath
    main = 'systems.comodal.mustache.Generate'
    if (project.hasProperty('dryRun')) {
        args 'dryRun'
    }
}

task generateAddrSrc(type: JavaExec) {
    classpath = sourceSets.mustache.runtimeClasspath
    main = 'systems.comodal.mustache.GenerateAddresses'
    if (project.hasProperty('dryRun')) {
        args 'dryRun'
    }
}

task printMemUsage(type: JavaExec) {
    classpath = sourceSets.jmh.runtimeClasspath
    main = 'systems.comodal.hash.benchmark.MemoryMeasurements'
    jvmArgs '-javaagent:/Users/james/git/hash-overlay/libs/jamm-0.3.2-SNAPSHOT.jar'
}
